@using RefactorName.WebApp.Areas.Backend.Models
@using MvcHtmlHelpers
@model WebGridList<UserModel>

@{
    WebGrid usersGrid = new WebGrid(canPage: true, canSort: true, rowsPerPage: Model.PageSize, ajaxUpdateContainerId: "grid_div");
    usersGrid.Bind(Model.List, autoSortAndPage: false, rowCount: Model.RowCount);
}
<div>
    @if (Model.List == null || Model.RowCount == 0)
    {
        <div class="alert alert-warning" style="text-align: center">NO Data Found</div>
    }
    else
    {
        usersGrid.PageIndex = Model.PageIndex - 1;
        <div class="well well-sm center-block" style="text-align: center; max-width: 200px">Users Number : @Model.RowCount</div>
        <div id="grid_div" class="table-responsive">
            @usersGrid.GetTableWithPager(
        tableStyle: "table table-striped ",
        actionName: "GetUsersList",
        mode: WebGridPagerModes.All,
        headerStyle: "", //"primary","light"
        footerStyle: "footerGrid",
         columns: usersGrid.Columns(
            usersGrid.Column("", header: "Number", canSort: true, style: "col60", format: item => Convert.ToString((usersGrid.PageIndex * usersGrid.RowsPerPage) + usersGrid.Rows.IndexOf(item) + 1)),
            //usersGrid.Column("UserName", header: Html.DisplayNameFor(x => x.List.First().UserName).ToString(), canSort: true),
            usersGrid.Column("FullName", header: Html.DisplayNameFor(x => x.List.First().FullName).ToString(), canSort: true),
             usersGrid.Column("Email", header: Html.DisplayNameFor(x => x.List.First().Email).ToString(), canSort: true),
           usersGrid.Column("PhoneNumber", header: Html.DisplayNameFor(x => x.List.First().PhoneNumber).ToString(), canSort: true),
           //usersGrid.Column("Priviledges", header: Html.DisplayNameFor(x => x.List.First().Priviledges).ToString(), canSort: true),
           usersGrid.Column("IsActive", header: Html.DisplayNameFor(x => x.List.First().IsActive).ToString(), canSort: true, format:
        @<text>
            @if (item.IsActive)
            {
                <span class="text-success">Active</span>
            }
            else
            {
                <span class="text-danger">Not Active</span>
            }</text>),

                              //usersGrid.Column(header: "Activation", format: (item) => item.IsActive == false
                              //                  ? @Html.MCIAjaxLinkWithConfirm("Activate User ", "Confirmation", "are You Sure To Activate This User ?", "ActivateUser", "", new { ID = item.UserID, active = 1 ,@style = "color:red;" },
                              //                                            new AjaxOptions()
                              //                                            {
                              //                                                HttpMethod = "Post",
                              //                                                OnSuccess = "acceptrequestOnSuccess",
                              //                                                UpdateTargetId = "divUsersGrid",
                              //                                                LoadingElementId = "dialog_loader"
                              //                                            }, null)

                              //         :
                              //                                    @Html.MCIAjaxLinkWithConfirm("Deactivate User ", "Confirmation", "are You Sure To Deactivate This User ?", "ActivateUser", "", new { ID = item.UserID, active = 0 , @style = "color:green;"},
                              //                                                     new AjaxOptions()
                              //                                                     {
                              //                                                         HttpMethod = "Post",
                              //                                                         OnSuccess = "acceptrequestOnSuccess",
                              //                                                         UpdateTargetId = "divUsersGrid",
                              //                                                         LoadingElementId = "dialog_loader"
                              //                                                     }, null)

                              //),
                              usersGrid.Column("", header: "", style: "action col70", format: item =>

                              Html.AcionLinkWithInnerHtml("<i class='fa fa-edit'></i>", "EditUser",
                         routeValues: new { UserName = item.UserName },
                         htmlAttributes: new { title = "تعديل" }))))

        </div>
    }
</div>
